[{"/Users/deveshkakkar/Documents/School/CS4261/VedicDevTinder/client/src/index.js":"1","/Users/deveshkakkar/Documents/School/CS4261/VedicDevTinder/client/src/App.js":"2","/Users/deveshkakkar/Documents/School/CS4261/VedicDevTinder/client/src/pages/OnBoarding.js":"3","/Users/deveshkakkar/Documents/School/CS4261/VedicDevTinder/client/src/pages/Home.js":"4","/Users/deveshkakkar/Documents/School/CS4261/VedicDevTinder/client/src/pages/Dashboard.js":"5","/Users/deveshkakkar/Documents/School/CS4261/VedicDevTinder/client/src/components/AuthModal.js":"6","/Users/deveshkakkar/Documents/School/CS4261/VedicDevTinder/client/src/components/Nav.js":"7","/Users/deveshkakkar/Documents/School/CS4261/VedicDevTinder/client/src/components/ChatContainer.js":"8"},{"size":254,"mtime":1662959858263,"results":"9","hashOfConfig":"10"},{"size":701,"mtime":1662962991714,"results":"11","hashOfConfig":"10"},{"size":8346,"mtime":1662962965558,"results":"12","hashOfConfig":"10"},{"size":1417,"mtime":1662962940064,"results":"13","hashOfConfig":"10"},{"size":4434,"mtime":1662963227962,"results":"14","hashOfConfig":"10"},{"size":2967,"mtime":1662968866473,"results":"15","hashOfConfig":"10"},{"size":794,"mtime":1662963697374,"results":"16","hashOfConfig":"10"},{"size":99,"mtime":1662959858257,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10kgqcl",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/deveshkakkar/Documents/School/CS4261/VedicDevTinder/client/src/index.js",[],[],"/Users/deveshkakkar/Documents/School/CS4261/VedicDevTinder/client/src/App.js",["46","47"],[],"import Home from './pages/Home'\nimport Dashboard from './pages/Dashboard'\nimport OnBoarding from './pages/OnBoarding'\nimport {BrowserRouter, Route, Routes} from 'react-router-dom'\nimport {useCookies} from 'react-cookie'\n\nconst App = () => {\n    const [cookies, setCookie, removeCookie] = useCookies(['user'])\n\n    const authToken = cookies.AuthToken\n\n    return (\n        <BrowserRouter>\n            <Routes>\n                <Route path=\"/\" element={<Home/>}/>\n                {authToken && <Route path=\"/dashboard\" element={<Dashboard/>}/>}\n                {authToken && <Route path=\"/onboarding\" element={<OnBoarding/>}/>}\n\n            </Routes>\n        </BrowserRouter>\n    )\n}\n\nexport default App\n","/Users/deveshkakkar/Documents/School/CS4261/VedicDevTinder/client/src/pages/OnBoarding.js",["48","49"],[],"import Nav from '../components/Nav'\nimport {useState} from 'react'\nimport {useCookies} from 'react-cookie'\nimport {useNavigate} from 'react-router-dom'\nimport axios from 'axios'\n\nconst OnBoarding = () => {\n    const [cookies, setCookie, removeCookie] = useCookies(null)\n    const [formData, setFormData] = useState({\n        user_id: cookies.UserId,\n        first_name: \"\",\n        dob_day: \"\",\n        dob_month: \"\",\n        dob_year: \"\",\n        show_gender: false,\n        gender_identity: \"man\",\n        gender_interest: \"woman\",\n        url: \"\",\n        about: \"\",\n        matches: []\n\n    })\n\n    let navigate = useNavigate()\n\n    const handleSubmit = async (e) => {\n        console.log('submitted')\n        e.preventDefault()\n        try {\n            const response = await axios.put('http://localhost:8000/user', {formData})\n            console.log(response)\n            const success = response.status === 200\n            if (success) navigate('/dashboard')\n        } catch (err) {\n            console.log(err)\n        }\n\n    }\n\n    const handleChange = (e) => {\n        console.log('e', e)\n        const value = e.target.type === \"checkbox\" ? e.target.checked : e.target.value\n        const name = e.target.name\n\n        setFormData((prevState) => ({\n            ...prevState,\n            [name]: value\n        }))\n    }\n\n    return (\n        <>\n            <Nav\n                minimal={true}\n                setShowModal={() => {\n                }}\n                showModal={false}\n            />\n\n            <div className=\"onboarding\">\n                <h2>CREATE ACCOUNT</h2>\n\n                <form onSubmit={handleSubmit}>\n                    <section>\n                        <label htmlFor=\"first_name\">First Name</label>\n                        <input\n                            id=\"first_name\"\n                            type='text'\n                            name=\"first_name\"\n                            placeholder=\"First Name\"\n                            required={true}\n                            value={formData.first_name}\n                            onChange={handleChange}\n                        />\n\n                        <label>Birthday</label>\n                        <div className=\"multiple-input-container\">\n                            <input\n                                id=\"dob_day\"\n                                type=\"number\"\n                                name=\"dob_day\"\n                                placeholder=\"DD\"\n                                required={true}\n                                value={formData.dob_day}\n                                onChange={handleChange}\n                            />\n\n                            <input\n                                id=\"dob_month\"\n                                type=\"number\"\n                                name=\"dob_month\"\n                                placeholder=\"MM\"\n                                required={true}\n                                value={formData.dob_month}\n                                onChange={handleChange}\n                            />\n\n                            <input\n                                id=\"dob_year\"\n                                type=\"number\"\n                                name=\"dob_year\"\n                                placeholder=\"YYYY\"\n                                required={true}\n                                value={formData.dob_year}\n                                onChange={handleChange}\n                            />\n                        </div>\n\n                        <label>Gender</label>\n                        <div className=\"multiple-input-container\">\n                            <input\n                                id=\"man-gender-identity\"\n                                type=\"radio\"\n                                name=\"gender_identity\"\n                                value=\"man\"\n                                onChange={handleChange}\n                                checked={formData.gender_identity === \"man\"}\n                            />\n                            <label htmlFor=\"man-gender-identity\">Man</label>\n                            <input\n                                id=\"woman-gender-identity\"\n                                type=\"radio\"\n                                name=\"gender_identity\"\n                                value=\"woman\"\n                                onChange={handleChange}\n                                checked={formData.gender_identity === \"woman\"}\n                            />\n                            <label htmlFor=\"woman-gender-identity\">Woman</label>\n                            <input\n                                id=\"more-gender-identity\"\n                                type=\"radio\"\n                                name=\"gender_identity\"\n                                value=\"more\"\n                                onChange={handleChange}\n                                checked={formData.gender_identity === \"more\"}\n                            />\n                            <label htmlFor=\"more-gender-identity\">More</label>\n                        </div>\n\n                        <label htmlFor=\"show-gender\">Show Gender on my Profile</label>\n\n                        <input\n                            id=\"show-gender\"\n                            type=\"checkbox\"\n                            name=\"show_gender\"\n                            onChange={handleChange}\n                            checked={formData.show_gender}\n                        />\n\n                        <label>Show Me</label>\n\n                        <div className=\"multiple-input-container\">\n                            <input\n                                id=\"man-gender-interest\"\n                                type=\"radio\"\n                                name=\"gender_interest\"\n                                value=\"man\"\n                                onChange={handleChange}\n                                checked={formData.gender_interest === \"man\"}\n                            />\n                            <label htmlFor=\"man-gender-interest\">Man</label>\n                            <input\n                                id=\"woman-gender-interest\"\n                                type=\"radio\"\n                                name=\"gender_interest\"\n                                value=\"woman\"\n                                onChange={handleChange}\n                                checked={formData.gender_interest === \"woman\"}\n                            />\n                            <label htmlFor=\"woman-gender-interest\">Woman</label>\n                            <input\n                                id=\"everyone-gender-interest\"\n                                type=\"radio\"\n                                name=\"gender_interest\"\n                                value=\"everyone\"\n                                onChange={handleChange}\n                                checked={formData.gender_interest === \"everyone\"}\n                            />\n                            <label htmlFor=\"everyone-gender-interest\">Everyone</label>\n\n                        </div>\n\n                        <label htmlFor=\"about\">About me</label>\n                        <input\n                            id=\"about\"\n                            type=\"text\"\n                            name=\"about\"\n                            required={true}\n                            placeholder=\"I like long walks...\"\n                            value={formData.about}\n                            onChange={handleChange}\n                        />\n\n                        <input type=\"submit\"/>\n                    </section>\n\n                    <section>\n\n                        <label htmlFor=\"url\">Profile Photo</label>\n                        <input\n                            type=\"url\"\n                            name=\"url\"\n                            id=\"url\"\n                            onChange={handleChange}\n                            required={true}\n                        />\n                        <div className=\"photo-container\">\n                            {formData.url && <img src={formData.url} alt=\"profile pic preview\"/>}\n                        </div>\n\n\n                    </section>\n\n                </form>\n            </div>\n        </>\n    )\n}\nexport default OnBoarding\n","/Users/deveshkakkar/Documents/School/CS4261/VedicDevTinder/client/src/pages/Home.js",["50"],[],"import Nav from '../components/Nav'\nimport AuthModal from '../components/AuthModal'\nimport { useState } from 'react'\nimport {useCookies} from \"react-cookie\"\n\n\nconst Home = () => {\n    const [showModal, setShowModal] = useState(false)\n    const [isSignUp, setIsSignUp] = useState(true)\n    const [cookies, setCookie, removeCookie] = useCookies(['user'])\n    const authToken = cookies.AuthToken\n\n    const handleClick = () => {\n        if (authToken) {\n            removeCookie('UserId', cookies.UserId)\n            removeCookie('AuthToken', cookies.AuthToken)\n            window.location.reload()\n            return\n        }\n        setShowModal(true)\n        setIsSignUp(true)\n    }\n\n    return (\n        <div className=\"overlay\">\n            <Nav\n                authToken={authToken}\n                minimal={false}\n                setShowModal={setShowModal}\n                showModal={showModal}\n                setIsSignUp={setIsSignUp}\n            />\n            <div className=\"home\">\n                <h1 className=\"primary-title\">Swipe Right®</h1>\n                <button className=\"primary-button\" onClick={handleClick}>\n                    {authToken ? 'Signout' : 'Create Account'}\n                </button>\n\n\n                {showModal && (\n                    <AuthModal setShowModal={setShowModal} isSignUp={isSignUp}/>\n                )}\n            </div>\n        </div>\n    )\n}\nexport default Home\n","/Users/deveshkakkar/Documents/School/CS4261/VedicDevTinder/client/src/pages/Dashboard.js",["51","52","53","54","55"],[],"import TinderCard from 'react-tinder-card'\nimport {useState, useEffect} from 'react'\nimport { useCookies } from 'react-cookie'\nimport axios from 'axios'\nimport ChatContainer from '../components/ChatContainer'\nconst Dashboard = () => {\n\n    const db = [\n        {\n            name: 'Richard Hendricks',\n            url: 'https://i.imgur.com/Q9WPlWA.jpeg'\n        },\n        {\n            name: 'Erlich Bachman',\n            url: 'https://i.imgur.com/wDmRJPc.jpeg'\n        },\n        {\n            name: 'Monica Hall',\n            url: 'https://i.imgur.com/oPj4A8u.jpeg'\n        },\n        {\n            name: 'Jared Dunn',\n            url: 'https://i.imgur.com/dmwjVjG.jpeg'\n        },\n        {\n            name: 'Dinesh Chugtai',\n            url: 'https://i.imgur.com/MWAcQRM.jpeg'\n        }\n    ]\n\n    const characters = db\n    const [user, setUser] = useState(null)\n    const [genderedUsers, setGenderedUsers] = useState(null)\n    const [lastDirection, setLastDirection] = useState()\n    const [cookies, setCookie, removeCookie] = useCookies(['user'])\n\n    const userId = cookies.UserId\n\n    const getUser = async () => {\n        try {\n            const response = await axios.get('http://localhost:8000/user', {\n                params: {userId}\n            })\n            setUser(response.data)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    const getGenderedUsers = async () => {\n        try {\n            const response = await axios.get('http://localhost:8000/gendered-users', {\n                params: {gender: user?.gender_interest}\n            })\n            setGenderedUsers(response.data)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    useEffect(() => {\n        getUser()\n    },[])\n\n    useEffect(() => {\n        if(user) {\n            getGenderedUsers()\n        }\n    },[user])\n\n    const updateMatches = async (matchedUserId) => {\n        try {\n            await axios.put('http://localhost:8000/addmatch', {\n                userId,\n                matchedUserId\n            })\n            getUser()\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n\n    const swiped = (direction, swipedUserId) => {\n        if (direction === 'right') {\n            updateMatches(swipedUserId)\n        }\n        setLastDirection(direction)\n    }\n\n    const outOfFrame = (name) => {\n        console.log(name + ' left the screen!')\n    }\n\n    const matchedUserId = user?.matches.map(({user_id}) => user_id).concat(userId)\n\n    const filteredGenderedUsers = genderedUsers?.filter(genderedUser => !matchedUserId.includes(genderedUser.user_id))\n\n    return (\n        <>\n            {user && \n            <div className = \"dashboard\">\n            <ChatContainer user={user}/>\n                <div className = \"swipe-container\">\n                    <div className = \"card-container\">\n                        {/* {characters.map((character) =>\n                            <TinderCard className='swipe' key={character.name} onSwipe={(dir) => swiped(dir, character.name)} onCardLeftScreen={() => outOfFrame(character.name)}>\n                                <div style={{ backgroundImage: 'url(' + character.url + ')' }} className='card'>\n                                    <h3>{character.name}</h3>\n                                </div>\n                            </TinderCard>\n                        )} */}\n                        {filteredGenderedUsers?.map((genderedUser) =>\n                            <TinderCard\n                                className=\"swipe\"\n                                key={genderedUser.user_id}\n                                onSwipe={(dir) => swiped(dir, genderedUser.user_id)}\n                                onCardLeftScreen={() => outOfFrame(genderedUser.first_name)}>\n                                <div\n                                    style={{backgroundImage: 'url(' + genderedUser.url + ')'}}\n                                    className='card'>\n                                    <h3>{genderedUser.first_name}</h3>\n                                </div>\n                            </TinderCard>\n                        )}\n                        <div className = \"swipe-info\">\n                            {lastDirection ? <p>You swiped {lastDirection}</p> : <p/>}\n                        </div>\n                    </div>\n                </div>\n            </div>}\n        </>\n    )\n}\n\nexport default Dashboard;\n","/Users/deveshkakkar/Documents/School/CS4261/VedicDevTinder/client/src/components/AuthModal.js",["56","57"],[],"/Users/deveshkakkar/Documents/School/CS4261/VedicDevTinder/client/src/components/Nav.js",[],[],"/Users/deveshkakkar/Documents/School/CS4261/VedicDevTinder/client/src/components/ChatContainer.js",[],[],{"ruleId":"58","severity":1,"message":"59","line":8,"column":21,"nodeType":"60","messageId":"61","endLine":8,"endColumn":30},{"ruleId":"58","severity":1,"message":"62","line":8,"column":32,"nodeType":"60","messageId":"61","endLine":8,"endColumn":44},{"ruleId":"58","severity":1,"message":"59","line":8,"column":21,"nodeType":"60","messageId":"61","endLine":8,"endColumn":30},{"ruleId":"58","severity":1,"message":"62","line":8,"column":32,"nodeType":"60","messageId":"61","endLine":8,"endColumn":44},{"ruleId":"58","severity":1,"message":"59","line":10,"column":21,"nodeType":"60","messageId":"61","endLine":10,"endColumn":30},{"ruleId":"58","severity":1,"message":"63","line":31,"column":11,"nodeType":"60","messageId":"61","endLine":31,"endColumn":21},{"ruleId":"58","severity":1,"message":"59","line":35,"column":21,"nodeType":"60","messageId":"61","endLine":35,"endColumn":30},{"ruleId":"58","severity":1,"message":"62","line":35,"column":32,"nodeType":"60","messageId":"61","endLine":35,"endColumn":44},{"ruleId":"64","severity":1,"message":"65","line":62,"column":7,"nodeType":"66","endLine":62,"endColumn":9,"suggestions":"67"},{"ruleId":"64","severity":1,"message":"68","line":68,"column":7,"nodeType":"66","endLine":68,"endColumn":13,"suggestions":"69"},{"ruleId":"58","severity":1,"message":"70","line":11,"column":13,"nodeType":"60","messageId":"61","endLine":11,"endColumn":20},{"ruleId":"58","severity":1,"message":"62","line":11,"column":33,"nodeType":"60","messageId":"61","endLine":11,"endColumn":45},"no-unused-vars","'setCookie' is assigned a value but never used.","Identifier","unusedVar","'removeCookie' is assigned a value but never used.","'characters' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["71"],"React Hook useEffect has a missing dependency: 'getGenderedUsers'. Either include it or remove the dependency array.",["72"],"'cookies' is assigned a value but never used.",{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},"Update the dependencies array to be: [getUser]",{"range":"77","text":"78"},"Update the dependencies array to be: [getGenderedUsers, user]",{"range":"79","text":"80"},[1751,1753],"[getUser]",[1844,1850],"[getGenderedUsers, user]"]